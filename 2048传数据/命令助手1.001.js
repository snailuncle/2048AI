var window = floaty.window(
  <frame><linear>
  <button id="action" text="CA" w="40" h="40" color="#ffffff" bg="#77000000"/>
  </linear> </frame>
  );
  function java_api(){
  var api=['android.accessibilityservice',
  'android.accounts',
  'android.animation',
  'android.app',
  'android.app.admin',
  'android.app.backup',
  'android.appwidget',
  'android.bluetooth',
  'android.content',
  'android.content.pm',
  'android.content.res',
  'android.database',
  'android.database.sqlite',
  'android.drm',
  'android.gesture',
  'android.graphics',
  'android.graphics.drawable',
  'android.graphics.drawable.shapes',
  'android.hardware',
  'android.hardware.input',
  'android.hardware.usb',
  'android.inputmethodservice',
  'android.location',
  'android.media',
  'android.media.audiofx',
  'android.media.effect',
  'android.mtp',
  'android.net',
  'android.net.http',
  'android.net.nsd',
  'android.net.rtp',
  'android.net.sip',
  'android.net.wifi',
  'android.net.wifi.p2p',
  'android.net.wifi.p2p.nsd',
  'android.nfc',
  'android.nfc.tech',
  'android.opengl',
  'android.os',
  'android.os.storage',
  'android.preference',
  'android.provider',
  'android.renderscript',
  'android.sax',
  'android.security',
  'android.service.textservice',
  'android.service.wallpaper',
  'android.speech',
  'android.speech.tts',
  'android.support.v13.app',
  'android.support.v13.dreams',
  'android.support.v4.accessibilityservice',
  'android.support.v4.app',
  'android.support.v4.content',
  'android.support.v4.content.pm',
  'android.support.v4.database',
  'android.support.v4.net',
  'android.support.v4.os',
  'android.support.v4.util',
  'android.support.v4.view',
  'android.support.v4.view.accessibility',
  'android.support.v4.widget',
  'android.telephony',
  'android.telephony.cdma',
  'android.telephony.gsm',
  'android.test',
  'android.test.mock',
  'android.test.suitebuilder',
  'android.text',
  'android.text.format',
  'android.text.method',
  'android.text.style',
  'android.text.util',
  'android.util',
  'android.view',
  'android.view.accessibility',
  'android.view.animation',
  'android.view.inputmethod',
  'android.view.textservice',
  'android.webkit',
  'android.widget',
  'dalvik.bytecode',
  'dalvik.system',
  'java.awt.font',
  'java.beans',
  'java.io',
  'java.lang',
  'java.lang.annotation',
  'java.lang.ref',
  'java.lang.reflect',
  'java.math',
  'java.net',
  'java.nio',
  'java.nio.channels',
  'java.nio.channels.spi',
  'java.nio.charset',
  'java.nio.charset.spi',
  'java.security',
  'java.security.acl',
  'java.security.cert',
  'java.security.interfaces',
  'java.security.spec',
  'java.sql',
  'java.text',
  'java.util',
  'java.util.concurrent',
  'java.util.concurrent.atomic',
  'java.util.concurrent.locks',
  'java.util.jar',
  'java.util.logging',
  'java.util.prefs',
  'java.util.regex',
  'java.util.zip',
  'javax.crypto',
  'javax.crypto.interfaces',
  'javax.crypto.spec',
  'javax.microedition.khronos.egl',
  'javax.microedition.khronos.opengles',
  'javax.net',
  'javax.net.ssl',
  'javax.security.auth',
  'javax.security.auth.callback',
  'javax.security.auth.login',
  'javax.security.auth.x500',
  'javax.security.cert',
  'javax.sql',
  'javax.xml',
  'javax.xml.datatype',
  'javax.xml.namespace',
  'javax.xml.parsers',
  'javax.xml.transform',
  'javax.xml.transform.dom',
  'javax.xml.transform.sax',
  'javax.xml.transform.stream',
  'javax.xml.validation',
  'javax.xml.xpath',
  'junit.framework',
  'junit.runner',
  'org.apache.http',
  'org.apache.http.auth',
  'org.apache.http.auth.params',
  'org.apache.http.client',
  'org.apache.http.client.entity',
  'org.apache.http.client.methods',
  'org.apache.http.client.params',
  'org.apache.http.client.protocol',
  'org.apache.http.client.utils',
  'org.apache.http.conn',
  'org.apache.http.conn.params',
  'org.apache.http.conn.routing',
  'org.apache.http.conn.scheme',
  'org.apache.http.conn.ssl',
  'org.apache.http.conn.util',
  'org.apache.http.cookie',
  'org.apache.http.cookie.params',
  'org.apache.http.entity',
  'org.apache.http.impl',
  'org.apache.http.impl.auth',
  'org.apache.http.impl.client',
  'org.apache.http.impl.conn',
  'org.apache.http.impl.conn.tsccm',
  'org.apache.http.impl.cookie',
  'org.apache.http.impl.entity',
  'org.apache.http.impl.io',
  'org.apache.http.io',
  'org.apache.http.message',
  'org.apache.http.params',
  'org.apache.http.protocol',
  'org.apache.http.util',
  'org.json',
  'org.w3c.dom',
  'org.w3c.dom.ls',
  'org.xml.sax',
  'org.xml.sax.ext',
  'org.xml.sax.helpers',
  'org.xmlpull.v1',
  'org.xmlpull.v1.sax2'];
  return api;
  }



  var 一级命令=[
  "应用",
  "控制台",
  "基于坐标的操作",
  "设备",
  "对话框",
  "脚本引擎",
  "悬浮窗",
  "文件系统",
  "一般全局函数",
  "http",
  "图片与图色",
  "按键模拟",
  "模块",
  "ui",
  "Java Api"
  ];


  var 二级命令=[
  ['launchApp("Auto.js");//运行应用名',
  b64("Ly/lkK/liqjlvq7kv6EKbGF1bmNoKCJjb20udGVuY2VudC5tbSIpOw=="),
  'app.launchPackage();',
  b64("dmFyIG5hbWUgPSBnZXRQYWNrYWdlTmFtZSgiUVEiKTsgLy/ov5Tlm54iY29tLnRlbmNlbnQubW9iaWxlcXEi"),
  b64("dmFyIG5hbWUgPSBnZXRBcHBOYW1lKCJjb20udGVuY2VudC5tb2JpbGVxcSIpOyAvL+i/lOWbniJRUSI="),
  'app.openAppSetting("com.tencent.mobileqq");//qq设置',
  'app.viewFile("/sdcard/1.txt");//用其他应用查看文件',
  'app.editFile("/sdcard/1.txt");//用其他应用编辑文件',
  'app.uninstall("com.tencent.mobileqq");//卸载qq',
  'app.openUrl("http://baidu.com");//用浏览器打开网站',
  b64("Ly/lj5HpgIHpgq7ku7bnu5kxMDA4NkBxcS5jb23lkowxMDAwMUBxcS5jb23jgIIKYXBwLnNlbmRFbWFpbCh7CiAgICBlbWFpbDogWyIxMDA4NkBxcS5jb20iLCAiMTAwMDFAcXEuY29tIl0sCiAgICBzdWJqZWN0OiAi6L+Z5piv5LiA5Liq6YKu5Lu25qCH6aKYIiwKICAgIHRleHQ6ICLov5nmmK/pgq7ku7bmraPmlociCn0pOw=="),
  b64("dmFyIHFx576k5Y+3PSI2NzkwMzk1MTYiOwphcHAuc3RhcnRBY3Rpdml0eSh7CiAgICBhY3Rpb246ICJhbmRyb2lkLmludGVudC5hY3Rpb24uVklFVyIsCiAgICBkYXRhOiJtcXFhcGk6Ly9jYXJkL3Nob3dfcHNsY2FyZD9jYXJkX3R5cGU9Z3JvdXAmdWluPSIrcXHnvqTlj7csCiAgICBwYWNrYWdlTmFtZTogImNvbS50ZW5jZW50Lm1vYmlsZXFxIiwKfSk7Ly/miZPlvIBxcee+pOWQjeeJhw=="),
  b64("dmFyIHFx5Y+3PSI3ODcwNjcwMzMiOwphcHAuc3RhcnRBY3Rpdml0eSh7CiAgICBhY3Rpb246ICJhbmRyb2lkLmludGVudC5hY3Rpb24uVklFVyIsCiAgICBkYXRhOiJtcXFhcGk6Ly9jYXJkL3Nob3dfcHNsY2FyZD91aW49IitxceWPtywKICAgIHBhY2thZ2VOYW1lOiAiY29tLnRlbmNlbnQubW9iaWxlcXEiLAp9KTsvL+aJk+W8gHFx5ZCN54mH"),
  b64("dmFyIHFx576k5Y+3PSI2NzkwMzk1MTYiOwphcHAuc3RhcnRBY3Rpdml0eSh7CiAgICBhY3Rpb246ICJhbmRyb2lkLmludGVudC5hY3Rpb24uVklFVyIsCiAgICBkYXRhOiJtcXE6Ly9pbS9jaGF0P2NoYXRfdHlwZT1ncm91cCZ2ZXJzaW9uPTEmc3JjX3R5cGU9d2ViJnVpbj0iK3Fx576k5Y+3LAogICAgcGFja2FnZU5hbWU6ICJjb20udGVuY2VudC5tb2JpbGVxcSIsCn0pOy8v5bey5Yqg5YWl55qEcXHnvqTogYrlpKk="),
  b64("dmFyIHFx5Y+3PSI3ODcwNjcwMzMiOwphcHAuc3RhcnRBY3Rpdml0eSh7CiAgICBhY3Rpb246ICJhbmRyb2lkLmludGVudC5hY3Rpb24uVklFVyIsCiAgICBkYXRhOiJtcXE6Ly9pbS9jaGF0P2NoYXRfdHlwZT13cGEmdmVyc2lvbj0xJnNyY190eXBlPXdlYiZ1aW49IitxceWPtywKICAgIHBhY2thZ2VOYW1lOiAiY29tLnRlbmNlbnQubW9iaWxlcXEiLAp9KTsvL3Fx5by65Yi26IGK5aSp"),
  ],
  ['console.show();',
  'console.hide();',
  'console.clear();',
  b64("Y29uc3QgY291bnQgPSA1Owpjb25zb2xlLmxvZygnY291bnQ6ICVkJywgY291bnQpOwovLyDmiZPljbA6IGNvdW50OiA1IOWIsCBzdGRvdXQKY29uc29sZS5sb2coJ2NvdW50OicsIGNvdW50KTsKLy8g5omT5Y2wOiBjb3VudDogNSDliLAgc3Rkb3V0"),
  'console.verbose();//灰色log',
  'console.info();//绿色',
  'console.warn();//蓝色',
  'console.error();//红色',
  b64("dmFyIGEgPSAxICsgMTsKY29uc29sZS5hc3NlcnQoYSA9PSAyLCAi5Yqg5rOV5Ye66ZSZ5ZWmIik7"),
  b64("dmFyIG4gPSBjb25zb2xlLmlucHV0KCLor7fovpPlhaXkuIDkuKrmlbDlrZc6Iik7IAovL+i+k+WFpTEyM+S5i+WQju+8mgp0b2FzdChuICsgMSk7Ci8v5pi+56S6MTI0"),
  b64("dmFyIG4gPSBjb25zb2xlLnJhd0lucHV0KCLor7fovpPlhaXkuIDkuKrmlbDlrZc6Iik7IAovL+i+k+WFpTEyM+S5i+WQju+8mgp0b2FzdChuICsgMSk7Ci8v5pi+56S6MTIzMQ=="),
  b64("Ly/orr7nva7mjqfliLblj7DlpKflsI/kuLrlsY/luZXnmoTlm5vliIbkuYvkuIAKY29uc29sZS5zZXRTaXplKGRldmljZS53aWR0aCAvIDIsIGRldmljZS5oZWlnaHQgLyAyKTs="),
  b64("Y29uc29sZS5zZXRQb3NpdGlvbigxMDAsIDEwMCk7Ly/orr7nva7mjqfliLblj7DkvY3nva4="),
  'print("1234")//打印1234到控制台'
  ],//基于坐标的操作
  ["click(0,0);",
  'longClick(0,0);',
  'press(0,0,100);',
  'swipe(0,01,1,100);',
  'gesture(1000, [0, 0], [500, 500], [500, 1000]);',
  'setScreenMetrics(1080, 1920);//设置脚本适合屏幕宽高',
  b64("Z2VzdHVyZXMoWzAsIDUwMCwgWzgwMCwgMzAwXSwgWzUwMCwgMTAwMF1dLAogICAgICAgICBbMCwgNTAwLCBbMzAwLCAxNTAwXSwgWzUwMCwgMTAwMF1dKTs="),
  '以下是基于root权限的操作',
  'var ra = new RootAutomator();',
  'ra.tap(200, 200, 2);',
  'ra.swipe(x1, x2, y1, y2[, duration, id]);',
  'ra.press(x, y, duration[, id]);',
  'ra.longPress(x, y[, id])',
  'ra.touchDown(x, y[, id]);',
  'ra.touchMove(x, y[, id]);',
  'ra.touchUp([id]);',
  'ra.exit();',
  'Tap(x, y);',
  'Swipe(x1,y1,x2,y2,[duration]);',
  ],
  [
  "Device",
  "device.width",
  "device.height",
  "device.buildId",
  "device.broad",
  "device.brand",
  "device.device",
  "deivce.model",
  "device.product",
  "device.bootloader",
  "device.hardware",
  "device.fingerprint",
  "device.serial",
  "device.sdkInt",
  "device.incremental",
  "device.release",
  "device.baseOS",
  "device.securityPatch",
  "device.codename",
  "device.getIMEI()",
  "device.getAndroidId()",
  "device.getMacAddress()",
  "device.getBrightness()",
  "device.getBrightnessMode()",
  "device.setBrightness(b)",
  "device.setBrightnessMode(mode)",
  "device.getMusicVolume()",
  "device.getNotificationVolume()",
  "device.getAlarmVolume()",
  "device.getMusicMaxVolume()",
  "device.getNotificationMaxVolume()",
  "device.getAlarmMaxVolume()",
  "device.setMusicVolume(volume)",
  "device.setNotificationVolume(volume)",
  "device.setAlarmVolume(volume)",
  "device.getBattery()",
  "device.isCharging()",
  "device.getTotalMem()",
  "device.getAvailMem()",
  "device.isScreenOn()",
  "device.wakeUp()",
  "device.wakeUpIfNeeded()",
  "device.keepScreenOn([timeout])",
  "device.keepScreenDim([timeout])",
  "device.cancelKeepingAwake()",
  "device.vibrate(millis)",
  "device.cancelVibration()"
  ],
  [
  "dialogs.alert(title[, content, callback])",
  "dialogs.confirm(title[, content, callback])",
  "dialogs.rawInput(title[, prefill, callback])",
  "dialogs.input(title[, prefill, callback])",
  "dialogs.prompt(title[, prefill, callback])",
  "dialogs.select(title, items, callback)",
  "dialogs.singleChoice(title, items[, index, callback])",
  "dialogs.multiChoice(title, items[, indices, callback])",
  b64("dmFyIGNsZWFyID0gY29uZmlybSgi6KaB5riF6Zmk5omA5pyJ57yT5a2Y5ZCXPyIpOwppZihjbGVhcil7CiAgICBhbGVydCgi5riF6Zmk5oiQ5YqfISIpOwp9"),
  'ui模式下只能用以下方式',
  b64("Ly/lm57osIPlvaLlvI8KIGNvbmZpcm0oIuimgea4hemZpOaJgOaciee8k+WtmOWQlz8iLCBmdW5jdGlvbihjbGVhcil7CiAgICAgaWYoY2xlYXIpewogICAgICAgICAgYWxlcnQoIua4hemZpOaIkOWKnyEiKTsKICAgICB9CiB9KTs="),
  b64("Ly9Qcm9taXNl5b2i5byPCmNvbmZpcm0oIuimgea4hemZpOaJgOaciee8k+WtmOWQlz8iKQogICAgLnRoZW4oY2xlYXIgPT4gewogICAgICAgIGlmKGNsZWFyKXsKICAgICAgICAgIGFsZXJ0KCLmuIXpmaTmiJDlip8hIik7CiAgICAgICAgfQogICAgfSk7"),
  b64("YWxlcnQoIuWYv+WYv+WYvyIpLnRoZW4oKCk9PnsKICAgIC8v5b2T54K55Ye756Gu5a6a5ZCO5Lya5omn6KGM6L+Z6YeMCn0pOw=="),
  b64("Y29uZmlybSgi56Gu5a6a5ZCXIikudGhlbih2YWx1ZT0+ewogICAgLy/lvZPngrnlh7vnoa7lrprlkI7kvJrmiafooYzov5nph4wsIHZhbHVl5Li6dHJ1ZeaIlmZhbHNlLCDooajnpLrngrnlh7si56Gu5a6aIuaIliLlj5bmtogiCn0pOw=="),
  b64("cmF3SW5wdXQoIuivt+i+k+WFpeaCqOeahOWQjeWtlyIsICLlsI/mmI4iLCBuYW1lID0+IHsKICAgICBhbGVydCgi5oKo55qE5ZCN5a2X5pivIiArIG5hbWUpOwp9KTs=")
  ],
  [
  "engines.execScript(name, script[, config])",
  "engines.execScriptFile(path[, config])",
  "engines.execAutoFile(path[, config])",
  "engines.stopAll()",
  "engines.stopAllAndToast()",
  "engines.myEngine()",
  "ScriptExecution.getEngine()",
  "ScriptExecution.getConfig()",
  "ScriptEngine",
  "ScriptEngine.forceStop()",
  "ScriptEngine.cwd()",
  "delay",
  "interval",
  "loopTimes",
  "getPath()",
  b64("Ly/mr4/pmpQz56eS6L+Q6KGM5LiA5qyh6ISa5pys77yM5b6q546vMTDmrKEKZW5naW5lcy5leGVjU2NyaXB0KCJoZWxsbyB3b3JsZCIsICJ0b2FzdCgnaGVsbG8gd29ybGQnKSIsIHsKICAgIGxvb3BUaW1lczogMTAsCiAgICBpbnRlcnZhbDogMzAwMAp9KTs="),
  b64("Y29uZmlnIDxPYmplY3Q+IOi/kOihjOmFjee9rumhuQpkZWxheSA8bnVtYmVyPiDlu7bov5/miafooYznmoTmr6vnp5LmlbDvvIzpu5jorqTkuLowCmxvb3BUaW1lcyA8bnVtYmVyPiDlvqrnjq/ov5DooYzmrKHmlbDvvIzpu5jorqTkuLox44CCMOS4uuaXoOmZkOW+queOr+OAggppbnRlcnZhbCA8bnVtYmVyPiDlvqrnjq/ov5DooYzml7bkuKTmrKHov5DooYzkuYvpl7TnmoTml7bpl7Tpl7TpmpTvvIzpu5jorqTkuLowCnBhdGggPEFycmF5PiB8IDxzdHJpbmc+IOaMh+WumuiEmuacrOi/kOihjOeahOebruW9leOAgui/meS6m+i3r+W+hOS8mueUqOS6jnJlcXVpcmXml7blr7vmib7mqKHlnZfmlofku7bjgII=")
  ],
  [
  "floaty.window(layout)",
  "floaty.closeAll()",
  ".setAdjustEnabled(enabled)",
  ".setPosition(x, y)",
  ".getX()",
  ".getY()",
  ".setSize(width, height)",
  ".getWidht()",
  ".getHeight()",
  ".close()",
  ".exitOnClose()",
  b64("dmFyIHdpbmRvdz1mbG9hdHkud2luZG93KAoKKTs="),
  b64("dWkucnVuKGZ1bmN0aW9uKCl7Cgp9KTs="),
  b64("d2luZG93Li5jbGljaygoKSA9PiB7Cgp9KTs="),
  b64("Ly/orrDlvZXmjInplK7ooqvmjInkuIvml7bnmoTop6bmkbjlnZDmoIcKdmFyIHggPSAwLCB5ID0gMDsKLy/orrDlvZXmjInplK7ooqvmjInkuIvml7bnmoTmgqzmta7nqpfkvY3nva4KdmFyIHdpbmRvd1gsIHdpbmRvd1k7Ci8v6K6w5b2V5oyJ6ZSu6KKr5oyJ5LiL55qE5pe26Ze05Lul5L6/5Yik5pat6ZW/5oyJ562J5Yqo5L2cCnZhciBkb3duVGltZTsKd2luZG93LmFjdGlvbi5zZXRPblRvdWNoTGlzdGVuZXIoZnVuY3Rpb24odmlldywgZXZlbnQpewogICAgc3dpdGNoKGV2ZW50LmdldEFjdGlvbigpKXsKICAgICAgICBjYXNlIGV2ZW50LkFDVElPTl9ET1dOOgogICAgICAgICAgICB4ID0gZXZlbnQuZ2V0UmF3WCgpOwogICAgICAgICAgICB5ID0gZXZlbnQuZ2V0UmF3WSgpOwogICAgICAgICAgICB3aW5kb3dYID0gd2luZG93LmdldFgoKTsKICAgICAgICAgICAgd2luZG93WSA9IHdpbmRvdy5nZXRZKCk7CiAgICAgICAgICAgIGRvd25UaW1lID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7CiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIGNhc2UgZXZlbnQuQUNUSU9OX01PVkU6CiAgICAgICAgICAgIC8v56e75Yqo5omL5oyH5pe26LCD5pW05oKs5rWu56qX5L2N572uCiAgICAgICAgICAgIHdpbmRvdy5zZXRQb3NpdGlvbih3aW5kb3dYICsgKGV2ZW50LmdldFJhd1goKSAtIHgpLAogICAgICAgICAgICAgICAgd2luZG93WSArIChldmVudC5nZXRSYXdZKCkgLSB5KSk7CiAgICAgICAgICAgIC8v5aaC5p6c5oyJ5LiL55qE5pe26Ze06LaF6L+HMS4156eS5Yik5pat5Li66ZW/5oyJ77yM6YCA5Ye66ISa5pysCiAgICAgICAgICAgIC8vaWYobmV3IERhdGUoKS5nZXRUaW1lKCkgLSBkb3duVGltZSA+IDE1MDApewogICAgICAgICAgICAgICAgLy9leGl0KCk7CiAgICAgICAgICAgIC8vfQogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICBjYXNlIGV2ZW50LkFDVElPTl9VUDoKICAgICAgICAgICAgLy/miYvmjIflvLnotbfml7blpoLmnpzlgY/np7vlvojlsI/liJnliKTmlq3kuLrngrnlh7sKICAgICAgICAgICAgaWYoTWF0aC5hYnMoZXZlbnQuZ2V0UmF3WSgpIC0geSkgPCA1ICYmIE1hdGguYWJzKGV2ZW50LmdldFJhd1goKSAtIHgpIDwgNSl7CiAgICAgICAgICAgICAgICAvL+WNleWHu+aXtueahOWGheWuuQogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgfQogICAgcmV0dXJuIHRydWU7Cn0pOy8v5oyJ6ZSu55uR5ZCs")
  ],
  [
  'files.isFile(path)',
  'files.isDir(path)',
  'files.isEmptyDir(path)',
  'files.join(parent, child)',
  'files.create(path)',
  'files.createWithDirs(path)',
  'files.exists(path)',
  'files.ensureDir(path)',
  'files.read(path[, encoding = "utf-8"])',
  'files.readBytes(path)',
  'files.write(path, text[, encoding = "utf-8"])',
  'files.writeBytes(path, bytes)',
  "files.append(path, text[, encoding = 'utf-8'])",
  "files.appendBytes(path, text[, encoding = 'utf-8'])",
  'files.copy(fromPath, toPath)',
  'files.move(fromPath, toPath)',
  'files.rename(path, newName)',
  'files.renameWithoutExtension(path, newName)',
  'files.getName(path)',
  'files.getNameWithoutExtension(path)',
  'files.getExtension(path)',
  'files.remove(path)',
  'files.removeDir(path)',
  'files.getSdcardPath()',
  'files.cwd()',
  'files.path(relativePath)',
  'files.listDir(path[, filter])',
  'open(path[, mode = "r", encoding = "utf-8", bufferSize = 8192])',
  'ReadableTextFile',
  'ReadableTextFile.read()',
  'ReadableTextFile.read(maxCount)',
  'ReadableTextFile.readline()',
  'ReadableTextFile.readlines()',
  'close()',
  'PWritableTextFile',
  'PWritableTextFile.write(text)',
  'PWritableTextFile.writeline(line)',
  'PWritableTextFile.writelines(lines)',
  'PWritableTextFile.flush()',
  'PWritableTextFile.close()'

  ],
  [
  b64("dGhyZWFkcy5zdGFydChmdW5jdGlvbigpewoKfSk7"),
  'sleep(n)',
  'currentPackage()',
  'currentActivity()',
  'setClip(text)',
  'getClip()',
  'toast(message)',
  'toastLog(message)',
  'waitForActivity(activity[, period = 200])',
  'waitForPackage(package[, period = 200])',
  'exit()',
  'random(min, max)',
  'random()',
  'context'

  ],
  [
  'http.get(url[, options, callback])',
  'http.post(url, data[, options, callback])',
  'http.postJson(url[, data, options, callback])',
  'http.postMultipart(url, files[, options, callback])',
  'http.request(url[, options, callback])',
  '.statusCode',
  '.statusMessage',
  '.headers',
  '.body',
  '.request',
  '.url',
  '.method'

  ],
  [
  'colors.toString(color)',
  'colors.red(color)',
  'colors.green(color)',
  'colors.blue(color)',
  'colors.alpha(color)',
  'colors.rgb(red, green, blue)',
  'colors.argb(alpha, red, green, blue)',
  'colors.parseColor(colorStr)',
  'colors.isSimilar(color2, color2[, threshold, algorithm])',
  'colors.equals(color1, color2)',
  'Images',
  'images.requestScreenCapture([landscape])',
  'images.captureScreen()',
  'images.captureScreen(path)',
  'images.pixel(image, x, y)',
  'images.save(image, path)',
  'images.read(path)',
  'images.load(url)',
  'images.clip(img, x, y, w, h)',
  'images.findColor(image, color, options)',
  'images.findColorInRegion(img, color, x, y[, width, height, threshold])',
  'images.findColorEquals(img, color[, x, y, width, height])',
  'images.findMultiColors(img, firstColor, colors[, options])',
  'images.detectsColor(image, color, x, y[, threshold = 16, algorithm = "diff"])',
  'images.findImage(img, template[, options])',
  'images.findImageInRegion(img, template, x, y[, width, height, threshold])',
  'Image',
  '.getWidth()',
  '.getHeight()',
  '.saveTo(path)',
  '.pixel(x, y)',
  'Point',
  'Point.x',
  'Point.y'

  ],
  [
  'back()',
  'home()',
  'powerDialog()',
  'notifications()',
  'quickSettings()',
  'recents()',
  'splitScreen()',
  'Home()',
  'Back()',
  'Power()',
  'Menu()',
  'VolumeUp()',
  'VolumeDown()',
  'Camera()',
  'Up()',
  'Down()',
  'Left()',
  'Right()',
  'OK()',
  'Text(text)',
  'KeyCode(code)'
  ],
  [

  ],
  ["ui.run(function(){\n\n});",
  'ui..click(() => {\n\n});',
            '"ui";',
            'ui.layout(\n\n);',
   'ui.statusBarColor("#00000000");',
   '<frame>\n\n</frame>',
   '<ScrollView>\n\n</ScrollView>',
   '<vertical>\n\n</vertical>',
   '<linear>\n\n</linear>',
   '<text />',
   '<seekbar progress="0"/>',
   '<button />',
   '<input />',
   'color="#ffffff" ',
             'id="" ',
             'margin="1 0 0 1" '
  ],
  java_api(),
  ];



  var execution = null;
  var x = 0, y = 0;
  var windowX, windowY;
  var downTime;
  window.action.setOnTouchListener(function(view, event){
  switch(event.getAction()){
  case event.ACTION_DOWN:
  x = event.getRawX();
  y = event.getRawY();
  windowX = window.getX();
  windowY = window.getY();
  downTime = new Date().getTime();
  return true;
  case event.ACTION_MOVE:
  window.setPosition(windowX + (event.getRawX() - x),
  windowY + (event.getRawY() - y));
  return true;
  case event.ACTION_UP:
  if(Math.abs(event.getRawY() - y) < 5 && Math.abs(event.getRawX() - x) < 5){
  onClick();
  }
  return true;
  }
  return true;
  });
  function onClick(){
  threads.start(function(){
  选择();
  });}
  function 选择(){
  var 一级选择=dialogs.select("命令助手",一级命令);
  var 二级选择=dialogs.select(一级命令[一级选择],二级命令[一级选择]);
  setClip(二级命令[一级选择][二级选择]);
  }
  function b64(str){
  return java.lang.String(android.util.Base64.decode(java.lang.String(str).getBytes(),0));
  }
  function apiz(api){
  eval("var p=new "+api);
  return Object.keys(p());
  }


  while(true){
  sleep(111);
  }
